{"ast":null,"code":"var _jsxFileName = \"/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx\";\nimport React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport * as helper from './components/helper';\nimport Button from '../../../../models/ui/button/button';\nexport default class CalendarUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startHour: 7,\n      endHour: 20,\n      currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    };\n    this.events = helper.events;\n\n    this.onSlotClick = (hour, date, event) => {\n      console.log(hour, date, event); // Duration time of event - minutes\n      // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n      // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    };\n  }\n\n  render() {\n    const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber);\n    const isEvents = []; // Array of events\n\n    const slots = []; // Hold the table\n\n    for (let i = this.state.startHour; i < this.state.endHour; i++) {\n      for (let j = 0; j < 4; j++) {\n        const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\"); // Array of the dats week\n\n        const days = [];\n\n        for (let i = 0; i < 7; i++) {\n          days.push(moment(new Date(allDaysWeek[i])).format(\"YYYY-DD-MM\"));\n        }\n\n        const eventsWeek = this.events[this.state.currentWeekNumber].events; // all the events of week i\n\n        eventsWeek.forEach((eventArr, i) => {\n          // Every item in the array  is array of events \n          eventArr.forEach(e => {\n            const date = moment(e.start).format(\"YYYY-DD-MM\");\n            const startTime = moment(e.start).format(\"HH:mm\");\n            const endTime = moment(e.end).format(\"HH:mm\");\n\n            if (date === days[i]) {\n              if (moment(hour, 'HH:mm').isSameOrAfter(moment(startTime, 'HH:mm')) && moment(hour, 'HH:mm').isBefore(moment(endTime, 'HH:mm'))) {\n                if (isEvents[i] && isEvents[i].id === e.id) {\n                  isEvents[i].title = \"\";\n                } else {\n                  isEvents[i] = e;\n                }\n              } else delete isEvents[i];\n            }\n          });\n        });\n        slots.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: hour,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: CalendarStyle.Hours,\n          style: {\n            cursor: 'initial'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }\n        }, hour), allDaysWeek.map((day, i) => /*#__PURE__*/React.createElement(\"td\", {\n          key: i * 10,\n          className: isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot,\n          onClick: () => this.onSlotClick(hour, day, isEvents[i] ? isEvents[i] : null),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }\n        }, isEvents[i] ? isEvents[i].title : \"\"))));\n      }\n    } // Return days and dats(The first row of table)\n\n\n    const curMonth = [];\n    const days = allDaysWeek.map((day, i) => {\n      if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n        curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1));\n      }\n\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: i * 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, helper.hebDays[i], /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }\n      }), moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM'));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Calendar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"orange\",\n      onClick: () => this.setState({\n        currentWeekNumber: this.state.currentWeekNumber + 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05D4\\u05D1\\u05D0\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"purple\",\n      onClick: () => this.setState({\n        currentWeekNumber: this.state.currentWeekNumber - 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E7\\u05D5\\u05D3\\u05DD\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"orange\",\n      onClick: () => this.setState({\n        currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E0\\u05D5\\u05DB\\u05D7\\u05D9\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: CalendarStyle.TableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]), days), slots)))));\n  }\n\n}","map":{"version":3,"sources":["/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx"],"names":["React","Component","CalendarStyle","moment","helper","Button","CalendarUser","state","startHour","endHour","currentWeekNumber","parseInt","Date","format","events","onSlotClick","hour","date","event","console","log","render","allDaysWeek","getWeekDaysByWeekNumber","isEvents","slots","i","j","days","push","eventsWeek","forEach","eventArr","e","start","startTime","endTime","end","isSameOrAfter","isBefore","id","title","Hours","cursor","map","day","Slot","Event","curMonth","indexOf","monthNumberToHeb","toString","month","hebDays","Calendar","Header","setState","Content","TableHeader","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport { Events } from '../../../../models/system/events';\nimport { Event } from '../../../../models/system/event';\nimport Button from '../../../../models/ui/button/button';\nimport Modal from '../../../../models/ui/modal/modal';\n\nexport default class CalendarUser extends Component {\n\n    state = {\n        startHour: 7,\n        endHour: 20,\n        currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    }\n\n    events: { [id: number]: Events } = helper.events;\n\n    onSlotClick = (hour: string, date: string, event: Event | null) => {\n        console.log(hour, date, event);\n        // Duration time of event - minutes\n        // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n        // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    }\n\n\n    render() {\n        const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber);\n\n        const isEvents: Event[] = []; // Array of events\n        const slots: JSX.Element[] = []; // Hold the table\n        for (let i = this.state.startHour; i < this.state.endHour; i++) {\n            for (let j = 0; j < 4; j++) {\n                const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n                // Array of the dats week\n                const days: any[] = [];\n                for (let i = 0; i < 7; i++) {\n                    days.push(moment(new Date(allDaysWeek[i])).format(\"YYYY-DD-MM\"));\n                }\n\n                const eventsWeek = this.events[this.state.currentWeekNumber].events; // all the events of week i\n                eventsWeek.forEach((eventArr: Event[], i: number) => { // Every item in the array  is array of events \n                    eventArr.forEach((e: Event) => {\n                        const date = moment(e.start).format(\"YYYY-DD-MM\");\n                        const startTime = moment(e.start).format(\"HH:mm\");\n                        const endTime = moment(e.end).format(\"HH:mm\");\n                        if (date === days[i]) {\n                            if (moment(hour, 'HH:mm').isSameOrAfter(moment(startTime, 'HH:mm')) &&\n                                (moment(hour, 'HH:mm').isBefore(moment(endTime, 'HH:mm')))) {\n                                if (isEvents[i] && isEvents[i].id === e.id) {\n                                    isEvents[i].title = \"\";\n                                }\n                                else {\n                                    isEvents[i] = e;\n                                }\n                            }\n                            else\n                                delete isEvents[i];\n                        }\n                    });\n                });\n\n                slots.push((\n                    <tr key={hour}>\n                        <td className={CalendarStyle.Hours} style={{ cursor: 'initial' }}>{hour}</td>\n                        {                            \n                            allDaysWeek.map((day: any, i: number) => (\n                                <td key={i * 10} className={isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot}\n                                    onClick={() => this.onSlotClick(hour, day, isEvents[i] ? isEvents[i] : null)}>\n                                    {isEvents[i] ? isEvents[i].title : \"\"}\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ));\n            }\n        }\n\n\n        // Return days and dats(The first row of table)\n        const curMonth: string[] = [];\n        const days = allDaysWeek.map((day: String, i: number) => {\n            if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n                curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1))\n            }\n            return (\n                <th key={i * 11}>\n                    {helper.hebDays[i]}\n                    <br />\n                    {moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM')}\n                </th>\n            );\n        });\n\n        return (\n            <React.Fragment>\n\n\n                <div className={CalendarStyle.Calendar}>\n                    <div className={CalendarStyle.Header}>\n                        <Button color='orange' onClick={() => this.setState({ currentWeekNumber: this.state.currentWeekNumber + 1 })}>שבוע הבא</Button>\n                        <Button color='purple' onClick={() => this.setState({ currentWeekNumber: this.state.currentWeekNumber - 1 })}>שבוע קודם</Button>\n                        <Button color='orange' onClick={() => this.setState({ currentWeekNumber: parseInt(moment(new Date()).format('WW')) })}>שבוע נוכחי</Button>\n\n                    </div>\n                    <div className={CalendarStyle.Content}>\n                        <table >\n                            <tbody>\n                                <tr>\n                                    <th className={CalendarStyle.TableHeader}>\n                                        {curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]}\n                                    </th>\n                                    {days}\n                                </tr>\n                                {slots}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx\";\nimport React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport * as helper from './components/helper';\nexport default class CalendarUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startHour: 7,\n      endHour: 20,\n      currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    };\n    this.events = helper.events;\n\n    this.onSlotClick = (hour, date, event) => {\n      console.log(hour, date, event); // Duration time of event - minutes\n      // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n      // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    };\n  }\n\n  render() {\n    const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber);\n    console.log('s');\n    const isEvents = []; // Array of events or false\n\n    const eventsWeek = this.events[this.state.currentWeekNumber]; // all the events of week i\n\n    const slots = []; // Hold the table\n\n    for (let i = this.state.startHour; i < this.state.endHour; i++) {\n      for (let j = 0; j < 4; j++) {\n        const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n        for (let i = 0; i < 6; i++) {\n          // i represent a day\n          if (!eventsWeek[i]) continue; //O(1)\n\n          if (eventsWeek[i][hour]) {\n            //O(1)\n            isEvents[i] = eventsWeek[i][hour];\n          } else if (isEvents[i] !== undefined) {\n            if (!moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))) delete isEvents[i];\n          }\n        }\n\n        slots.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: hour,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: CalendarStyle.Hours,\n          style: {\n            cursor: 'initial'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, hour), allDaysWeek.map((day, i) => {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: i * 10,\n            className: isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot,\n            onClick: () => this.onSlotClick(hour, day, isEvents[i]),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }\n          }, isEvents[i] && !isEvents[i].description ? isEvents[i].title : \"\");\n        })));\n      }\n    } // Return days and dats(The first row of table)\n\n\n    const curMonth = [];\n    const days = allDaysWeek.map((day, i) => {\n      if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n        curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1));\n      }\n\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: i * 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, helper.hebDays[i], /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }), moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM'));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Calendar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: CalendarStyle.TableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]), days), slots)))));\n  }\n\n}","map":{"version":3,"sources":["/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx"],"names":["React","Component","CalendarStyle","moment","helper","CalendarUser","state","startHour","endHour","currentWeekNumber","parseInt","Date","format","events","onSlotClick","hour","date","event","console","log","render","allDaysWeek","getWeekDaysByWeekNumber","isEvents","eventsWeek","slots","i","j","undefined","isBefore","end","push","Hours","cursor","map","day","Slot","Event","description","title","curMonth","days","indexOf","monthNumberToHeb","toString","month","hebDays","Calendar","Header","Content","TableHeader","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AAMA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAEhDK,KAFgD,GAExC;AACJC,MAAAA,SAAS,EAAE,CADP;AAEJC,MAAAA,OAAO,EAAE,EAFL;AAGJC,MAAAA,iBAAiB,EAAEC,QAAQ,CAACP,MAAM,CAAC,IAAIQ,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,IAA1B,CAAD;AAHvB,KAFwC;AAAA,SAQhDC,MARgD,GAQMT,MAAM,CAACS,MARb;;AAAA,SAUhDC,WAVgD,GAUlC,CAACC,IAAD,EAAeC,IAAf,EAA6BC,KAA7B,KAA0D;AACpEC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,IAAlB,EAAwBC,KAAxB,EADoE,CAEpE;AACA;AACA;AACH,KAf+C;AAAA;;AAkBhDG,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAGjB,MAAM,CAACkB,uBAAP,CAA+B,KAAKhB,KAAL,CAAWG,iBAA1C,CAApB;AAEAS,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AAEA,UAAMI,QAAiB,GAAG,EAA1B,CALK,CAKyB;;AAC9B,UAAMC,UAAqC,GAAG,KAAKX,MAAL,CAAY,KAAKP,KAAL,CAAWG,iBAAvB,CAA9C,CANK,CAMoF;;AACzF,UAAMgB,KAAoB,GAAG,EAA7B,CAPK,CAO4B;;AACjC,SAAK,IAAIC,CAAC,GAAG,KAAKpB,KAAL,CAAWC,SAAxB,EAAmCmB,CAAC,GAAG,KAAKpB,KAAL,CAAWE,OAAlD,EAA2DkB,CAAC,EAA5D,EAAgE;AAC5D,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,cAAMZ,IAAI,GAAGZ,MAAM,CAACuB,CAAC,GAAG,GAAJ,GAAUC,CAAC,GAAG,EAAf,EAAmB,OAAnB,CAAN,CAAkCf,MAAlC,CAAyC,OAAzC,CAAb;;AAEA,aAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,cAAI,CAACF,UAAU,CAACE,CAAD,CAAf,EAAoB,SADI,CACM;;AAC9B,cAAIF,UAAU,CAACE,CAAD,CAAV,CAAcX,IAAd,CAAJ,EAAyB;AAAE;AACvBQ,YAAAA,QAAQ,CAACG,CAAD,CAAR,GAAcF,UAAU,CAACE,CAAD,CAAV,CAAcX,IAAd,CAAd;AACH,WAFD,MAGK,IAAIQ,QAAQ,CAACG,CAAD,CAAR,KAAgBE,SAApB,EAA+B;AAChC,gBAAI,CAAEzB,MAAM,CAACY,IAAD,EAAO,OAAP,CAAN,CAAsBc,QAAtB,CAA+B1B,MAAM,CAACA,MAAM,CAACoB,QAAQ,CAACG,CAAD,CAAR,CAAYI,GAAb,CAAN,CAAwBlB,MAAxB,CAA+B,OAA/B,CAAD,EAA0C,OAA1C,CAArC,CAAN,EACI,OAAOW,QAAQ,CAACG,CAAD,CAAf;AACP;AACJ;;AAEDD,QAAAA,KAAK,CAACM,IAAN,eACI;AAAI,UAAA,GAAG,EAAEhB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,SAAS,EAAEb,aAAa,CAAC8B,KAA7B;AAAoC,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmElB,IAAnE,CADJ,EAGQM,WAAW,CAACa,GAAZ,CAAgB,CAACC,GAAD,EAAWT,CAAX,KAAyB;AACrC,8BACI;AAAI,YAAA,GAAG,EAAEA,CAAC,GAAG,EAAb;AAAiB,YAAA,SAAS,EAAEH,QAAQ,CAACG,CAAD,CAAR,GAAcxB,aAAa,CAACkC,IAAd,GAAqB,GAArB,GAA2BlC,aAAa,CAACmC,KAAvD,GAA+DnC,aAAa,CAACkC,IAAzG;AACI,YAAA,OAAO,EAAE,MAAM,KAAKtB,WAAL,CAAiBC,IAAjB,EAAuBoB,GAAvB,EAA4BZ,QAAQ,CAACG,CAAD,CAApC,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEKH,QAAQ,CAACG,CAAD,CAAR,IAAe,CAACH,QAAQ,CAACG,CAAD,CAAR,CAAYY,WAA5B,GAA0Cf,QAAQ,CAACG,CAAD,CAAR,CAAYa,KAAtD,GAA8D,EAFnE,CADJ;AAMH,SAPD,CAHR,CADJ;AAeH;AACJ,KAvCI,CA0CL;;;AACA,UAAMC,QAAkB,GAAG,EAA3B;AACA,UAAMC,IAAI,GAAGpB,WAAW,CAACa,GAAZ,CAAgB,CAACC,GAAD,EAAcT,CAAd,KAA4B;AACrD,UAAIc,QAAQ,CAACE,OAAT,CAAiBtC,MAAM,CAACuC,gBAAP,CAAwBxC,MAAM,CAACgC,GAAG,CAACS,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqCC,KAArC,KAA+C,CAAvE,CAAjB,MAAgG,CAAC,CAArG,EAAwG;AACpGL,QAAAA,QAAQ,CAACT,IAAT,CAAc3B,MAAM,CAACuC,gBAAP,CAAwBxC,MAAM,CAACgC,GAAG,CAACS,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqCC,KAArC,KAA+C,CAAvE,CAAd;AACH;;AACD,0BACI;AAAI,QAAA,GAAG,EAAEnB,CAAC,GAAG,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKtB,MAAM,CAAC0C,OAAP,CAAepB,CAAf,CADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKvB,MAAM,CAACgC,GAAG,CAACS,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqChC,MAArC,CAA4C,OAA5C,CAHL,CADJ;AAOH,KAXY,CAAb;AAaA,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAEV,aAAa,CAAC6C,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE7C,aAAa,CAAC8C,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI;AAAK,MAAA,SAAS,EAAE9C,aAAa,CAAC+C,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAE/C,aAAa,CAACgD,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,QAAQ,CAACW,MAAT,KAAoB,CAApB,GAAwBX,QAAxB,GAAmCA,QAAQ,CAAC,CAAD,CAAR,GAAc,GAAd,GAAoBA,QAAQ,CAAC,CAAD,CADpE,CADJ,EAIKC,IAJL,CADJ,EAOKhB,KAPL,CADJ,CADJ,CALJ,CAHJ,CADJ;AAyBH;;AApG+C","sourcesContent":["import React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport { Events } from '../../../../models/system/events';\nimport { Event } from '../../../../models/system/event';\nimport Button from '../../../../models/ui/button/button';\nimport Modal from '../../../../models/ui/modal/modal';\n\nexport default class CalendarUser extends Component {\n\n    state = {\n        startHour: 7,\n        endHour: 20,\n        currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    }\n\n    events: { [id: number]: { [id: string]: Event }[] } = helper.events;\n\n    onSlotClick = (hour: string, date: string, event: Event | undefined) => {\n        console.log(hour, date, event);\n        // Duration time of event - minutes\n        // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n        // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    }\n\n\n    render() {\n        const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber);\n\n        console.log('s');\n        \n        const isEvents: Event[] = []; // Array of events or false\n        const eventsWeek: { [id: string]: Event }[] = this.events[this.state.currentWeekNumber]; // all the events of week i\n        const slots: JSX.Element[] = []; // Hold the table\n        for (let i = this.state.startHour; i < this.state.endHour; i++) {\n            for (let j = 0; j < 4; j++) {\n                const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n                \n                for (let i = 0; i < 6; i++) { // i represent a day\n                    if (!eventsWeek[i]) continue; //O(1)\n                    if (eventsWeek[i][hour]) { //O(1)\n                        isEvents[i] = eventsWeek[i][hour];\n                    }\n                    else if (isEvents[i] !== undefined) {\n                        if (!(moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))))\n                            delete isEvents[i];\n                    }                    \n                }\n\n                slots.push((\n                    <tr key={hour}>\n                        <td className={CalendarStyle.Hours} style={{ cursor: 'initial' }}>{hour}</td>\n                        {\n                            allDaysWeek.map((day: any, i: number) => {\n                                return (\n                                    <td key={i * 10} className={isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot}\n                                        onClick={() => this.onSlotClick(hour, day, isEvents[i])}>\n                                        {isEvents[i] && !isEvents[i].description ? isEvents[i].title : \"\"}\n                                    </td>\n                                )\n                            })\n                        }\n                    </tr>\n                ));\n            }\n        }\n\n\n        // Return days and dats(The first row of table)\n        const curMonth: string[] = [];\n        const days = allDaysWeek.map((day: String, i: number) => {\n            if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n                curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1))\n            }\n            return (\n                <th key={i * 11}>\n                    {helper.hebDays[i]}\n                    <br />\n                    {moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM')}\n                </th>\n            );\n        });\n\n        return (\n            <React.Fragment>\n\n\n                <div className={CalendarStyle.Calendar}>\n                    <div className={CalendarStyle.Header}>\n                        \n\n                    </div>\n                    <div className={CalendarStyle.Content}>\n                        <table >\n                            <tbody>\n                                <tr>\n                                    <th className={CalendarStyle.TableHeader}>\n                                        {curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]}\n                                    </th>\n                                    {days}\n                                </tr>\n                                {slots}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
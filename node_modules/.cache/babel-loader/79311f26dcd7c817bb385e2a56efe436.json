{"ast":null,"code":"var _jsxFileName = \"/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.business.tsx\";\nimport React, { useState } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport Button from '../../../../models/ui/button/button';\nimport NewQueue from './components/add-new-queue/add-new-queue.calendar';\n\nconst CalendarUser = () => {\n  const [StartHour, setStartHour] = useState(7);\n  const [EndHour, setEndHour] = useState(20);\n  const [CurWeek, setCurWeek] = useState(parseInt(moment(new Date()).format('WW')));\n  const [OpenModal, setOpenModal] = useState(false);\n  const [NewEvent, setNewEvent] = useState({\n    date: \"\",\n    hour: \"\"\n  });\n  const events = helper.events;\n  const eventsWeek = events[CurWeek]; // all the events of week i\n\n  const addNewEvent = e => {\n    const friday = {};\n    friday['09:45'] = e;\n    eventsWeek[5] = friday;\n  };\n\n  const onSlotClick = (hour, date) => {\n    setOpenModal(true);\n    setNewEvent({\n      date: date,\n      hour: hour\n    }); // Duration time of event - minutes\n    // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n    // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n  };\n\n  const onEventClick = (hour, date, event) => {\n    console.log(hour, date, event);\n    setOpenModal(true);\n    setNewEvent({\n      date: date,\n      hour: hour\n    });\n  };\n\n  const allDaysWeek = helper.getWeekDaysByWeekNumber(CurWeek);\n  const isEvents = []; // Array of events or false\n\n  const slots = []; // Hold the table\n\n  for (let i = StartHour; i < EndHour; i++) {\n    for (let j = 0; j < 4; j++) {\n      const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n      for (let i = 0; i < 6; i++) {\n        // i represent a day\n        if (!eventsWeek[i]) continue; //O(1)\n\n        if (eventsWeek[i][hour]) {\n          //O(1)\n          isEvents[i] = eventsWeek[i][hour];\n        } else if (isEvents[i] !== undefined) {\n          if (!moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))) delete isEvents[i];\n        }\n      }\n\n      slots.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: hour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: CalendarStyle.Hours,\n        style: {\n          cursor: 'initial'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, hour), allDaysWeek.map((day, i) => {\n        const e = cloneDeep(isEvents[i]);\n\n        if (isEvents[i]) {\n          //If The is a event\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: i * 10,\n            className: CalendarStyle.Slot + \" \" + CalendarStyle.Event,\n            onClick: () => onEventClick(hour, day, e),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 37\n            }\n          }, isEvents[i].title);\n        }\n\n        return (\n          /*#__PURE__*/\n          //If The is not event\n          React.createElement(\"td\", {\n            key: i * 10,\n            className: CalendarStyle.Slot,\n            onClick: () => onSlotClick(hour, day),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }\n          })\n        );\n      })));\n    }\n  } // Return days and dats(The first row of table)\n\n\n  const curMonth = [];\n  const days = allDaysWeek.map((day, i) => {\n    if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n      curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1));\n    }\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i * 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, helper.hebDays[i], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }), moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM'));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, OpenModal && /*#__PURE__*/React.createElement(NewQueue, {\n    event: NewEvent,\n    close: () => setOpenModal(false),\n    addNewQueue: addNewEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Calendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"orange\",\n    onClick: () => setCurWeek(CurWeek + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05D4\\u05D1\\u05D0\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"purple\",\n    onClick: () => setCurWeek(CurWeek - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E7\\u05D5\\u05D3\\u05DD\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"orange\",\n    onClick: () => setCurWeek(parseInt(moment(new Date()).format('WW'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E0\\u05D5\\u05DB\\u05D7\\u05D9\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: CalendarStyle.TableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]), days), slots)))));\n};\n\nexport default CalendarUser;","map":{"version":3,"sources":["/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.business.tsx"],"names":["React","useState","CalendarStyle","moment","cloneDeep","helper","Button","NewQueue","CalendarUser","StartHour","setStartHour","EndHour","setEndHour","CurWeek","setCurWeek","parseInt","Date","format","OpenModal","setOpenModal","NewEvent","setNewEvent","date","hour","events","eventsWeek","addNewEvent","e","friday","onSlotClick","onEventClick","event","console","log","allDaysWeek","getWeekDaysByWeekNumber","isEvents","slots","i","j","undefined","isBefore","end","push","Hours","cursor","map","day","Slot","Event","title","curMonth","days","indexOf","monthNumberToHeb","toString","month","hebDays","Calendar","Header","Content","TableHeader","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAO,KAAKC,MAAZ,MAAwB,qBAAxB;AAEA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,QAAP,MAAqB,mDAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACc,QAAQ,CAACZ,MAAM,CAAC,IAAIa,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,IAA1B,CAAD,CAAT,CAAtC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAiC;AAAEqB,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAjC,CAAxC;AAEA,QAAMC,MAAmD,GAAGnB,MAAM,CAACmB,MAAnE;AACA,QAAMC,UAAqC,GAAGD,MAAM,CAACX,OAAD,CAApD,CARuB,CAQwC;;AAE/D,QAAMa,WAAW,GAAIC,CAAD,IAAc;AAC9B,UAAMC,MAA+B,GAAG,EAAxC;AACAA,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkBD,CAAlB;AACAF,IAAAA,UAAU,CAAC,CAAD,CAAV,GAAgBG,MAAhB;AACH,GAJD;;AAMA,QAAMC,WAAW,GAAG,CAACN,IAAD,EAAeD,IAAf,KAAgC;AAChDH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC;AAAEC,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAX,CAFgD,CAGhD;AACA;AACA;AACH,GAND;;AAQA,QAAMO,YAAY,GAAG,CAACP,IAAD,EAAeD,IAAf,EAA6BS,KAA7B,KAA8C;AAC/DC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAkBD,IAAlB,EAAwBS,KAAxB;AACAZ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC;AAAEC,MAAAA,IAAI,EAAEA,IAAR;AAAcC,MAAAA,IAAI,EAAEA;AAApB,KAAD,CAAX;AACH,GAJD;;AAQA,QAAMW,WAAW,GAAG7B,MAAM,CAAC8B,uBAAP,CAA+BtB,OAA/B,CAApB;AAEA,QAAMuB,QAAiB,GAAG,EAA1B,CAlCuB,CAkCO;;AAC9B,QAAMC,KAAoB,GAAG,EAA7B,CAnCuB,CAmCU;;AACjC,OAAK,IAAIC,CAAC,GAAG7B,SAAb,EAAwB6B,CAAC,GAAG3B,OAA5B,EAAqC2B,CAAC,EAAtC,EAA0C;AACtC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAMhB,IAAI,GAAGpB,MAAM,CAACmC,CAAC,GAAG,GAAJ,GAAUC,CAAC,GAAG,EAAf,EAAmB,OAAnB,CAAN,CAAkCtB,MAAlC,CAAyC,OAAzC,CAAb;;AAEA,WAAK,IAAIqB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAAE;AAC1B,YAAI,CAACb,UAAU,CAACa,CAAD,CAAf,EAAoB,SADI,CACM;;AAC9B,YAAIb,UAAU,CAACa,CAAD,CAAV,CAAcf,IAAd,CAAJ,EAAyB;AAAE;AACvBa,UAAAA,QAAQ,CAACE,CAAD,CAAR,GAAcb,UAAU,CAACa,CAAD,CAAV,CAAcf,IAAd,CAAd;AACH,SAFD,MAGK,IAAIa,QAAQ,CAACE,CAAD,CAAR,KAAgBE,SAApB,EAA+B;AAChC,cAAI,CAAErC,MAAM,CAACoB,IAAD,EAAO,OAAP,CAAN,CAAsBkB,QAAtB,CAA+BtC,MAAM,CAACA,MAAM,CAACiC,QAAQ,CAACE,CAAD,CAAR,CAAYI,GAAb,CAAN,CAAwBzB,MAAxB,CAA+B,OAA/B,CAAD,EAA0C,OAA1C,CAArC,CAAN,EACI,OAAOmB,QAAQ,CAACE,CAAD,CAAf;AACP;AACJ;;AAEDD,MAAAA,KAAK,CAACM,IAAN,eACI;AAAI,QAAA,GAAG,EAAEpB,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAErB,aAAa,CAAC0C,KAA7B;AAAoC,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmEtB,IAAnE,CADJ,EAGQW,WAAW,CAACY,GAAZ,CAAgB,CAACC,GAAD,EAAWT,CAAX,KAAyB;AACrC,cAAMX,CAAC,GAAGvB,SAAS,CAACgC,QAAQ,CAACE,CAAD,CAAT,CAAnB;;AACA,YAAIF,QAAQ,CAACE,CAAD,CAAZ,EAAiB;AAAE;AACf,8BACI;AAAI,YAAA,GAAG,EAAEA,CAAC,GAAG,EAAb;AAAiB,YAAA,SAAS,EAAEpC,aAAa,CAAC8C,IAAd,GAAqB,GAArB,GAA2B9C,aAAa,CAAC+C,KAArE;AACI,YAAA,OAAO,EAAE,MAAMnB,YAAY,CAACP,IAAD,EAAOwB,GAAP,EAAYpB,CAAZ,CAD/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEKS,QAAQ,CAACE,CAAD,CAAR,CAAYY,KAFjB,CADJ;AAMH;;AACD;AAAA;AAAS;AACL;AAAI,YAAA,GAAG,EAAEZ,CAAC,GAAG,EAAb;AAAiB,YAAA,SAAS,EAAEpC,aAAa,CAAC8C,IAA1C;AAAgD,YAAA,OAAO,EAAE,MAAMnB,WAAW,CAACN,IAAD,EAAOwB,GAAP,CAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAGH,OAbD,CAHR,CADJ;AAqBH;AACJ,GAzEsB,CA4EvB;;;AACA,QAAMI,QAAkB,GAAG,EAA3B;AACA,QAAMC,IAAI,GAAGlB,WAAW,CAACY,GAAZ,CAAgB,CAACC,GAAD,EAAcT,CAAd,KAA4B;AACrD,QAAIa,QAAQ,CAACE,OAAT,CAAiBhD,MAAM,CAACiD,gBAAP,CAAwBnD,MAAM,CAAC4C,GAAG,CAACQ,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqCC,KAArC,KAA+C,CAAvE,CAAjB,MAAgG,CAAC,CAArG,EAAwG;AACpGL,MAAAA,QAAQ,CAACR,IAAT,CAActC,MAAM,CAACiD,gBAAP,CAAwBnD,MAAM,CAAC4C,GAAG,CAACQ,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqCC,KAArC,KAA+C,CAAvE,CAAd;AACH;;AACD,wBACI;AAAI,MAAA,GAAG,EAAElB,CAAC,GAAG,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKjC,MAAM,CAACoD,OAAP,CAAenB,CAAf,CADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGKnC,MAAM,CAAC4C,GAAG,CAACQ,QAAJ,EAAD,EAAiB,YAAjB,CAAN,CAAqCtC,MAArC,CAA4C,OAA5C,CAHL,CADJ;AAOH,GAXY,CAAb;AAcA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,SAAS,iBAAI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEE,QAAjB;AAA2B,IAAA,KAAK,EAAE,MAAMD,YAAY,CAAC,KAAD,CAApD;AAA6D,IAAA,WAAW,EAAEO,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlB,eAEI;AAAK,IAAA,SAAS,EAAExB,aAAa,CAACwD,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAExD,aAAa,CAACyD,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAM7C,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,eAEI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFJ,eAGI,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACC,QAAQ,CAACZ,MAAM,CAAC,IAAIa,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,IAA1B,CAAD,CAAT,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAHJ,CADJ,eAOI;AAAK,IAAA,SAAS,EAAEf,aAAa,CAAC0D,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE1D,aAAa,CAAC2D,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,QAAQ,CAACW,MAAT,KAAoB,CAApB,GAAwBX,QAAxB,GAAmCA,QAAQ,CAAC,CAAD,CAAR,GAAc,GAAd,GAAoBA,QAAQ,CAAC,CAAD,CADpE,CADJ,EAIKC,IAJL,CADJ,EAOKf,KAPL,CADJ,CADJ,CAPJ,CAFJ,CADJ;AA0BH,CAtHD;;AAwHA,eAAe7B,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport { Event } from '../../../../models/system/event';\nimport Button from '../../../../models/ui/button/button';\nimport NewQueue from './components/add-new-queue/add-new-queue.calendar';\n\nconst CalendarUser = () => {\n    const [StartHour, setStartHour] = useState(7);\n    const [EndHour, setEndHour] = useState(20);\n    const [CurWeek, setCurWeek] = useState(parseInt(moment(new Date()).format('WW')))\n    const [OpenModal, setOpenModal] = useState<boolean>(false)\n    const [NewEvent, setNewEvent] = useState<{ date: string, hour: string }>({ date: \"\", hour: \"\" });\n\n    const events: { [id: number]: { [id: string]: Event }[] } = helper.events;\n    const eventsWeek: { [id: string]: Event }[] = events[CurWeek]; // all the events of week i\n\n    const addNewEvent = (e: Event) => {\n        const friday: { [id: string]: Event } = {};\n        friday['09:45'] = e;\n        eventsWeek[5] = friday;\n    }\n\n    const onSlotClick = (hour: string, date: string) => {\n        setOpenModal(true);\n        setNewEvent({ date: date, hour: hour });\n        // Duration time of event - minutes\n        // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n        // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    }\n\n    const onEventClick = (hour: string, date: string, event: Event) => {\n        console.log(hour, date, event);\n        setOpenModal(true);\n        setNewEvent({ date: date, hour: hour });\n    }\n\n\n\n    const allDaysWeek = helper.getWeekDaysByWeekNumber(CurWeek);\n\n    const isEvents: Event[] = []; // Array of events or false\n    const slots: JSX.Element[] = []; // Hold the table\n    for (let i = StartHour; i < EndHour; i++) {\n        for (let j = 0; j < 4; j++) {\n            const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n            for (let i = 0; i < 6; i++) { // i represent a day\n                if (!eventsWeek[i]) continue; //O(1)\n                if (eventsWeek[i][hour]) { //O(1)\n                    isEvents[i] = eventsWeek[i][hour];\n                }\n                else if (isEvents[i] !== undefined) {\n                    if (!(moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))))\n                        delete isEvents[i];\n                }\n            }\n\n            slots.push((\n                <tr key={hour}>\n                    <td className={CalendarStyle.Hours} style={{ cursor: 'initial' }}>{hour}</td>\n                    {\n                        allDaysWeek.map((day: any, i: number) => {\n                            const e = cloneDeep(isEvents[i]);\n                            if (isEvents[i]) { //If The is a event\n                                return ( \n                                    <td key={i * 10} className={CalendarStyle.Slot + \" \" + CalendarStyle.Event}\n                                        onClick={() => onEventClick(hour, day, e)}>\n                                        {isEvents[i].title}\n                                    </td>\n                                );\n                            }\n                            return ( //If The is not event\n                                <td key={i * 10} className={CalendarStyle.Slot} onClick={() => onSlotClick(hour, day)}></td>\n                            );\n                        })\n                    }\n                </tr>\n            ));\n        }\n    }\n\n\n    // Return days and dats(The first row of table)\n    const curMonth: string[] = [];\n    const days = allDaysWeek.map((day: String, i: number) => {\n        if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n            curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1))\n        }\n        return (\n            <th key={i * 11}>\n                {helper.hebDays[i]}\n                <br />\n                {moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM')}\n            </th>\n        );\n    });\n\n\n    return (\n        <React.Fragment>\n            {OpenModal && <NewQueue event={NewEvent} close={() => setOpenModal(false)} addNewQueue={addNewEvent} />}\n            <div className={CalendarStyle.Calendar}>\n                <div className={CalendarStyle.Header}>\n                    <Button color='orange' onClick={() => setCurWeek(CurWeek + 1)}>שבוע הבא</Button>\n                    <Button color='purple' onClick={() => setCurWeek(CurWeek - 1)}>שבוע קודם</Button>\n                    <Button color='orange' onClick={() => setCurWeek(parseInt(moment(new Date()).format('WW')))}>שבוע נוכחי</Button>\n\n                </div>\n                <div className={CalendarStyle.Content}>\n                    <table >\n                        <tbody>\n                            <tr>\n                                <th className={CalendarStyle.TableHeader}>\n                                    {curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]}\n                                </th>\n                                {days}\n                            </tr>\n                            {slots}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default CalendarUser;"]},"metadata":{},"sourceType":"module"}
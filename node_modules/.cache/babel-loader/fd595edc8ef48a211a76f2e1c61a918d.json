{"ast":null,"code":"var _jsxFileName = \"/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.business.tsx\";\nimport React, { useState } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport Button from '../../../../models/ui/button/button';\nimport NewQueue from './components/add-new-queue/add-new-queue.calendar';\n\nconst CalendarUser = () => {\n  const [StartHour, setStartHour] = useState(7);\n  const [EndHour, setEndHour] = useState(20);\n  const [CurWeek, setCurWeek] = useState(parseInt(moment(new Date()).format('WW')));\n  const [OpenModal, setOpenModal] = useState(false);\n  console.log(OpenModal);\n  const events = helper.events;\n\n  const onSlotClick = (hour, date, event) => {\n    console.log(hour, date, event);\n    setOpenModal(true); // Duration time of event - minutes\n    // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n    // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n  };\n\n  const allDaysWeek = helper.getWeekDaysByWeekNumber(CurWeek);\n  const isEvents = []; // Array of events or false\n\n  const eventsWeek = events[CurWeek]; // all the events of week i\n\n  const slots = []; // Hold the table\n\n  for (let i = StartHour; i < EndHour; i++) {\n    for (let j = 0; j < 4; j++) {\n      const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n      for (let i = 0; i < 6; i++) {\n        // i represent a day\n        if (!eventsWeek[i]) continue; //O(1)\n\n        if (eventsWeek[i][hour]) {\n          //O(1)\n          isEvents[i] = eventsWeek[i][hour];\n        } else if (isEvents[i] !== undefined) {\n          if (!moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))) delete isEvents[i];\n        }\n      }\n\n      slots.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: hour,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: CalendarStyle.Hours,\n        style: {\n          cursor: 'initial'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, hour), allDaysWeek.map((day, i) => {\n        const e = cloneDeep(isEvents[i]);\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: i * 10,\n          className: isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot,\n          onClick: () => onSlotClick(hour, day, e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }\n        }, isEvents[i] && !isEvents[i].description ? isEvents[i].title : \"\");\n      })));\n    }\n  } // Return days and dats(The first row of table)\n\n\n  const curMonth = [];\n  const days = allDaysWeek.map((day, i) => {\n    if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n      curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1));\n    }\n\n    return /*#__PURE__*/React.createElement(\"th\", {\n      key: i * 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, helper.hebDays[i], /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }), moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM'));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NewQueue, {\n    close: () => setOpenModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Calendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"orange\",\n    onClick: () => setCurWeek(CurWeek + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05D4\\u05D1\\u05D0\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"purple\",\n    onClick: () => setCurWeek(CurWeek - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E7\\u05D5\\u05D3\\u05DD\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"orange\",\n    onClick: () => setCurWeek(parseInt(moment(new Date()).format('WW'))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, \"\\u05E9\\u05D1\\u05D5\\u05E2 \\u05E0\\u05D5\\u05DB\\u05D7\\u05D9\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: CalendarStyle.Content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: CalendarStyle.TableHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]), days), slots)))));\n};\n\nexport default CalendarUser;","map":{"version":3,"sources":["/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.business.tsx"],"names":["React","useState","CalendarStyle","moment","cloneDeep","helper","Button","NewQueue","CalendarUser","StartHour","setStartHour","EndHour","setEndHour","CurWeek","setCurWeek","parseInt","Date","format","OpenModal","setOpenModal","console","log","events","onSlotClick","hour","date","event","allDaysWeek","getWeekDaysByWeekNumber","isEvents","eventsWeek","slots","i","j","undefined","isBefore","end","push","Hours","cursor","map","day","e","Slot","Event","description","title","curMonth","days","indexOf","monthNumberToHeb","toString","month","hebDays","Calendar","Header","Content","TableHeader","length"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport { cloneDeep } from 'lodash';\nimport * as helper from './components/helper';\nimport { Event } from '../../../../models/system/event';\nimport Button from '../../../../models/ui/button/button';\nimport Modal from '../../../../models/ui/modal/modal';\nimport NewQueue from './components/add-new-queue/add-new-queue.calendar';\n\nconst CalendarUser = () => {\n    const [StartHour, setStartHour] = useState(7);\n    const [EndHour, setEndHour] = useState(20);\n    const [CurWeek, setCurWeek] = useState(parseInt(moment(new Date()).format('WW')))\n    const [OpenModal, setOpenModal] = useState<boolean>(false)\n    console.log(OpenModal);\n\n    const events: { [id: number]: { [id: string]: Event }[] } = helper.events;\n\n    const onSlotClick = (hour: string, date: string, event: Event) => {\n        console.log(hour, date, event);\n        setOpenModal(true);\n        // Duration time of event - minutes\n        // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n        // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    }\n\n\n    const allDaysWeek = helper.getWeekDaysByWeekNumber(CurWeek);\n\n    const isEvents: Event[] = []; // Array of events or false\n    const eventsWeek: { [id: string]: Event }[] = events[CurWeek]; // all the events of week i\n    const slots: JSX.Element[] = []; // Hold the table\n    for (let i = StartHour; i < EndHour; i++) {\n        for (let j = 0; j < 4; j++) {\n            const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n            for (let i = 0; i < 6; i++) { // i represent a day\n                if (!eventsWeek[i]) continue; //O(1)\n                if (eventsWeek[i][hour]) { //O(1)\n                    isEvents[i] = eventsWeek[i][hour];\n                }\n                else if (isEvents[i] !== undefined) {\n                    if (!(moment(hour, 'HH:mm').isBefore(moment(moment(isEvents[i].end).format(\"HH:mm\"), 'HH:mm'))))\n                        delete isEvents[i];\n                }\n            }\n\n            slots.push((\n                <tr key={hour}>\n                    <td className={CalendarStyle.Hours} style={{ cursor: 'initial' }}>{hour}</td>\n                    {\n                        allDaysWeek.map((day: any, i: number) => {\n                            const e = cloneDeep(isEvents[i]);\n                            return (\n                                <td key={i * 10} className={isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot}\n                                    onClick={() => onSlotClick(hour, day, e)}>\n                                    {isEvents[i] && !isEvents[i].description ? isEvents[i].title : \"\"}\n                                </td>\n                            )\n                        })\n                    }\n                </tr>\n            ));\n        }\n    }\n\n\n    // Return days and dats(The first row of table)\n    const curMonth: string[] = [];\n    const days = allDaysWeek.map((day: String, i: number) => {\n        if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n            curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1))\n        }\n        return (\n            <th key={i * 11}>\n                {helper.hebDays[i]}\n                <br />\n                {moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM')}\n            </th>\n        );\n    });\n\n\n    return (\n        <React.Fragment>\n            <NewQueue close={() => setOpenModal(false)} />\n            <div className={CalendarStyle.Calendar}>\n                <div className={CalendarStyle.Header}>\n                    <Button color='orange' onClick={() => setCurWeek(CurWeek + 1)}>שבוע הבא</Button>\n                    <Button color='purple' onClick={() => setCurWeek(CurWeek - 1)}>שבוע קודם</Button>\n                    <Button color='orange' onClick={() => setCurWeek(parseInt(moment(new Date()).format('WW')))}>שבוע נוכחי</Button>\n\n                </div>\n                <div className={CalendarStyle.Content}>\n                    <table >\n                        <tbody>\n                            <tr>\n                                <th className={CalendarStyle.TableHeader}>\n                                    {curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]}\n                                </th>\n                                {days}\n                            </tr>\n                            {slots}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default CalendarUser;"]},"metadata":{},"sourceType":"module"}
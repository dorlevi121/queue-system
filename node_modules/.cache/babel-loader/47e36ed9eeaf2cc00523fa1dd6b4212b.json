{"ast":null,"code":"var _jsxFileName = \"/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx\";\nimport React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport * as helper from './components/helper';\nexport default class CalendarUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      startHour: 7,\n      endHour: 20,\n      currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    };\n    this.events = helper.events;\n\n    this.onSlotClick = (hour, date) => {\n      console.log(hour, date); // Duration time of event - minutes\n      // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n      // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    };\n  }\n\n  render() {\n    const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber); // Array of events \n\n    const isEvents = [];\n    const slots = []; // Hold the table\n\n    for (let i = this.state.startHour; i < this.state.endHour; i++) {\n      for (let j = 0; j < 4; j++) {\n        const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\"); // Array of the dats week\n\n        const days = [];\n\n        for (let i = 0; i < 7; i++) {\n          days.push(moment(new Date(allDaysWeek[i])).format(\"YYYY-DD-MM\"));\n        }\n\n        const eventsWeek = this.events[this.state.currentWeekNumber].events; // all the events of week i\n\n        eventsWeek.forEach((eventArr, i) => {\n          // Every item in the array  is array of events \n          eventArr.forEach(e => {\n            const date = moment(e.start).format(\"YYYY-DD-MM\");\n            const startTime = moment(e.start).format(\"HH:mm\");\n            const endTime = moment(e.end).format(\"HH:mm\");\n\n            if (date === days[i]) {\n              if (moment(hour, 'HH:mm').isSameOrAfter(moment(startTime, 'HH:mm')) && moment(hour, 'HH:mm').isBefore(moment(endTime, 'HH:mm'))) {\n                if (isEvents[i] && isEvents[i].id === e.id) {\n                  isEvents[i].title = \"\";\n                } else {\n                  isEvents[i] = e;\n                }\n              } else delete isEvents[i];\n            }\n          });\n        });\n        slots.push( /*#__PURE__*/React.createElement(\"tr\", {\n          key: hour,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          className: CalendarStyle.Hours,\n          style: {\n            cursor: 'initial'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }, hour), allDaysWeek.map((day, i) => /*#__PURE__*/React.createElement(\"td\", {\n          className: isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot,\n          onClick: () => this.onSlotClick(hour, day),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }\n        }, isEvents[i] ? isEvents[i].title : \"\"))));\n      }\n    } // Return days and dats(The first row of table)\n\n\n    const curMonth = [];\n    const days = allDaysWeek.map((day, i) => {\n      if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n        curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1));\n      }\n\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: i * 11,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, helper.hebDays[i], /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }), moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM'));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Calendar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Header,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        currentWeekNumber: this.state.currentWeekNumber + 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"next\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        currentWeekNumber: this.state.currentWeekNumber - 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"prev\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setState({\n        currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"current week\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: CalendarStyle.Content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: CalendarStyle.TableHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }, curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]), days), slots))));\n  }\n\n}","map":{"version":3,"sources":["/home/dor/Desktop/workspace/queue/src/module/business/components/calendar/calendar.user.tsx"],"names":["React","Component","CalendarStyle","moment","helper","CalendarUser","state","startHour","endHour","currentWeekNumber","parseInt","Date","format","events","onSlotClick","hour","date","console","log","render","allDaysWeek","getWeekDaysByWeekNumber","isEvents","slots","i","j","days","push","eventsWeek","forEach","eventArr","e","start","startTime","endTime","end","isSameOrAfter","isBefore","id","title","Hours","cursor","map","day","Slot","Event","curMonth","indexOf","monthNumberToHeb","toString","month","hebDays","Calendar","Header","setState","Content","TableHeader","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CalendarStyle from './calendar.module.scss';\nimport moment from 'moment';\nimport * as helper from './components/helper';\nimport { Events } from '../../../../models/system/events';\nimport { Event } from '../../../../models/system/event';\n\nexport default class CalendarUser extends Component {\n\n    state = {\n        startHour: 7,\n        endHour: 20,\n        currentWeekNumber: parseInt(moment(new Date()).format('WW'))\n    }\n\n    events: { [id: number]: Events } = helper.events;\n\n    onSlotClick = (hour: string, date: string) => {\n        console.log(hour, date);\n        // Duration time of event - minutes\n        // const durationOfEvent = moment.utc(moment(e, \"YYYY-DD-MM HH:mm\").diff(moment(s, \"YYYY-DD-MM HH:mm\"))).minutes();\n        // const sMin = (moment(s).hour() * 60) + moment(s).minute();\n    }\n\n\n    render() {\n        const allDaysWeek = helper.getWeekDaysByWeekNumber(this.state.currentWeekNumber);\n        // Array of events \n        const isEvents: Event[] = [];\n        const slots: JSX.Element[] = []; // Hold the table\n        for (let i = this.state.startHour; i < this.state.endHour; i++) {\n            for (let j = 0; j < 4; j++) {\n                const hour = moment(i + \":\" + j * 15, \"HH:mm\").format(\"HH:mm\");\n\n                // Array of the dats week\n                const days: any[] = [];\n                for (let i = 0; i < 7; i++) {\n                    days.push(moment(new Date(allDaysWeek[i])).format(\"YYYY-DD-MM\"));\n                }\n\n                const eventsWeek = this.events[this.state.currentWeekNumber].events; // all the events of week i\n                eventsWeek.forEach((eventArr: Event[], i: number) => { // Every item in the array  is array of events \n                    eventArr.forEach((e: Event) => {\n                        const date = moment(e.start).format(\"YYYY-DD-MM\");\n                        const startTime = moment(e.start).format(\"HH:mm\");\n                        const endTime = moment(e.end).format(\"HH:mm\");\n                        if (date === days[i]) {\n                            if (moment(hour, 'HH:mm').isSameOrAfter(moment(startTime, 'HH:mm')) &&\n                                (moment(hour, 'HH:mm').isBefore(moment(endTime, 'HH:mm')))) {\n                                if (isEvents[i] && isEvents[i].id === e.id) {\n                                    isEvents[i].title = \"\";\n                                }\n                                else {\n                                    isEvents[i] = e;\n                                }\n                            }\n                            else\n                                delete isEvents[i];\n                        }\n                    });\n                });\n\n\n                slots.push((\n                    <tr key={hour}>\n                        <td className={CalendarStyle.Hours} style={{ cursor: 'initial' }}>{hour}</td>\n                        {\n                            allDaysWeek.map((day: any, i: number) => (\n                                <td className={isEvents[i] ? CalendarStyle.Slot + \" \" + CalendarStyle.Event : CalendarStyle.Slot} onClick={() => this.onSlotClick(hour, day)}>\n                                    {isEvents[i] ? isEvents[i].title : \"\"}\n                                </td>\n                            ))\n                        }\n                    </tr>\n                ));\n            }\n        }\n\n\n        // Return days and dats(The first row of table)\n        const curMonth: string[] = [];\n        const days = allDaysWeek.map((day: String, i: number) => {\n            if (curMonth.indexOf(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1)) === -1) {\n                curMonth.push(helper.monthNumberToHeb(moment(day.toString(), 'yyyy/MM/DD').month() + 1))\n            }\n            return (\n                <th key={i * 11}>\n                    {helper.hebDays[i]}\n                    <br />\n                    {moment(day.toString(), \"yyyy/MM/DD\").format('DD/MM')}\n                </th>\n            )\n        });\n\n        return (\n            <div className={CalendarStyle.Calendar}>\n                <div className={CalendarStyle.Header}>\n                    <button onClick={() => this.setState({ currentWeekNumber: this.state.currentWeekNumber + 1 })}>next</button>\n                    <button onClick={() => this.setState({ currentWeekNumber: this.state.currentWeekNumber - 1 })}>prev</button>\n                    <button onClick={() => this.setState({ currentWeekNumber: parseInt(moment(new Date()).format('WW')) })}>current week</button>\n\n                </div>\n                <div className={CalendarStyle.Content}>\n                    <table >\n                        <tbody>\n                            <tr>\n                                <th className={CalendarStyle.TableHeader}>\n                                    {curMonth.length === 1 ? curMonth : curMonth[0] + \"-\" + curMonth[1]}\n                                </th>\n                                {days}\n                            </tr>\n                            {slots}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}